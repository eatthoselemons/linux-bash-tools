source ~/git/linux-bash-tools/libs/error-handling.shlib

readConfigFile() {
  (grep -E "^${2}=" -m 1 "${1}" 2>/dev/null || echo "VAR=__UNDEFINED__") | head -n 1 | cut -d '=' -f 2-;
}

getConfigVar() {
  val="$(readConfigFile "$PWD/${1}" "${2}")";
  if [ "${val}" = "__UNDEFINED__" ]
  then
    if [[ -f $PWD/${1}.defaults ]]
    then
      val="$(configReadFile "$PWD/${1}.defaults" "${2}")";
    fi
  fi
  printf -- "%s" "${val}";
}


changeConfigVar() {
  variable=`echo ${2} | sed -r 's/^([A-Za-z]*)=.*/\1/g'`
  if [[ ! -f ${1} ]]
  then
    touch "$PWD/${1}"
  fi
  if grep -q $variable "$PWD/${1}"
  then
    sed -i "s/^$variable=.*$/${2}/g" "$PWD/${1}"
  else
    echo "${2}" >> "$PWD/${1}"
  fi
}

function parse_yaml {
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
}
